# Based partially on Alyxia's work, thanks so much!

name: Release
on:
  push:
    branches:
      - main

env:
  FORCE_COLOR: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions: write-all

jobs:
  build-linux:
    runs-on: ubuntu-20.04 # hopefully older glibc for better compatibility on systems like debian bullseye

    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Linux dependencies
        run: |
          sudo apt update
          sudo apt install -y pkg-config libsdl2-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libglx-dev libgl1-mesa-dev libxxf86vm-dev libwayland-dev libxkbcommon-dev wayland-protocols extra-cmake-modules

      - name: Install Go dependencies
        run: go get -v

      - name: Build GUI
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -v -tags "static gui" -ldflags "-s -w -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=latest'" -o BestcordInstaller-x11

      - name: Build CLI
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -tags "static cli" -ldflags "-s -w -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=latest'" -o BestcordInstallerCli-Linux

      - name: Update executable
        run: |
          chmod +x BestcordInstaller*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BestcordInstaller-linux
          path: |
            BestcordInstaller-x11
            BestcordInstallerCli-Linux


  build-mac:
    runs-on: macos-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - id: go-cache-paths
        run: |
          echo "go_build=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "go_mod=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: brew install pkg-config sdl2

      - name: Install Go dependencies
        run: go get -v

      - name: Build GUI
        run: CGO_CFLAGS="-mmacosx-version-min=10.15" CGO_LDFLAGS="-mmacosx-version-min=10.15" CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -v -tags "static gui" -ldflags "-s -w -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=latest'" -o BestcordInstaller

      - name: Update executable
        run: |
          chmod +x BestcordInstaller*

      - name: Generate MacOS GUI bundle
        run: |
          mkdir -p BestcordInstaller.app/Contents/MacOS
          mkdir -p BestcordInstaller.app/Contents/Resources
          cp macos/Info.plist BestcordInstaller.app/Contents/Info.plist
          mv BestcordInstaller BestcordInstaller.app/Contents/MacOS/BestcordInstaller
          cp macos/icon.icns BestcordInstaller.app/Contents/Resources/icon.icns
          zip -r BestcordInstaller.MacOS.zip BestcordInstaller.app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BestcordInstaller-macos
          path: |
            BestcordInstaller.MacOS.zip


  build-windows:
    runs-on: windows-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2

      - name: Install Windows dependencies
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm git mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2 mingw-w64-x86_64-go
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64

      - name: Install Go dependencies
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          go get -v
          go install github.com/tc-hib/go-winres@latest

      - name: Build GUI
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          go-winres make --product-version "git-tag"
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -v -tags "static gui" -ldflags "-s -w -H=windowsgui -extldflags=-static -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=latest'" -o BestcordInstaller.exe

      - name: Build i386 CLI
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -v -tags "static cli" -ldflags "-s -w -extldflags=-static -X 'vencord/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencord/buildinfo.InstallerTag=latest'" -o BestcordInstallerCli.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BestcordInstaller-windows
          path: |
            BestcordInstaller.exe
            BestcordInstallerCli.exe


  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: "Download Linux Artifacts"
        uses: actions/download-artifact@v4
        with:
          name: BestcordInstaller-linux
          path: linux

      - name: "Download MacOS Artifacts"
        uses: actions/download-artifact@v4
        with:
          name: BestcordInstaller-macos
          path: macos

      - name: "Download Windows Artifacts"
        uses: actions/download-artifact@v4
        with:
          name: BestcordInstaller-windows
          path: windows

      - name: Delete existing latest release
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          keep_latest: 0
          delete_tag_pattern: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create the release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest Build
          token: ${{ env.GITHUB_TOKEN }}
          generate_release_notes: false
          make_latest: true
          prerelease: false
          draft: false
          body: |
            Ceci est la derni√®re version de Bestcord Installer - Build automatique depuis le commit `${{ github.sha }}`.
            
            L'installateur Bestcord vous permet d'installer facilement Bestcord sur votre installation Discord.
            
            **üîß Construit le :** ${{ github.event.head_commit.timestamp }}
            **üìù Dernier commit :** ${{ github.event.head_commit.message }}
            **üë§ Auteur :** ${{ github.event.head_commit.author.name }}
            
            ## üì• T√©l√©chargements
            
            ### Windows
            - **GUI**: `BestcordInstaller.exe` - Interface graphique conviviale  
            - **CLI**: `BestcordInstallerCli.exe` - Interface en ligne de commande
            
            ### macOS
            - **GUI**: `BestcordInstaller.MacOS.zip` - Application macOS
            
            ### Linux
            - **GUI**: `BestcordInstaller-x11` - Interface graphique X11
            - **CLI**: `BestcordInstallerCli-Linux` - Interface en ligne de commande
            
            ## üöÄ Installation rapide
            
            **Windows**: T√©l√©chargez et ex√©cutez `BestcordInstaller.exe`
            **macOS**: T√©l√©chargez et d√©compressez `BestcordInstaller.MacOS.zip`, puis ex√©cutez l'application
            **Linux**: T√©l√©chargez `BestcordInstaller-x11`, rendez-le ex√©cutable avec `chmod +x`, puis ex√©cutez-le
            
            ## ‚ö†Ô∏è Notes importantes
            
            - Fermez compl√®tement Discord avant d'utiliser l'installateur
            - L'installateur t√©l√©chargera automatiquement la derni√®re version de Bestcord
            - Assurez-vous d'avoir les permissions n√©cessaires pour modifier votre installation Discord
            
            ---
            
            *Cette release est automatiquement g√©n√©r√©e √† chaque push sur la branche principale.*
          files: |
            linux/BestcordInstaller-x11
            linux/BestcordInstallerCli-Linux
            macos/BestcordInstaller.MacOS.zip
            windows/BestcordInstaller*.exe